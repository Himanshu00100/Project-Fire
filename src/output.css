/*
! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.invisible {
  visibility: hidden;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.top-0 {
  top: 0px;
}

.left-0 {
  left: 0px;
}

.right-0 {
  right: 0px;
}

.bottom-0 {
  bottom: 0px;
}

.bottom-\[\] {
  bottom: ;
}

.bottom-\[-\] {
  bottom: -;
}

.bottom-\[-20px\] {
  bottom: -20px;
}

.left-\[\] {
  left: ;
}

.left-\[-100\%\] {
  left: -100%;
}

.right-\[\] {
  right: ;
}

.right-\[5px\] {
  right: 5px;
}

.right-\[0px\] {
  right: 0px;
}

.top-\[\] {
  top: ;
}

.top-\[0px\] {
  top: 0px;
}

.right-\[-2px\] {
  right: -2px;
}

.top-\[px\] {
  top: px;
}

.top-\[2px\] {
  top: 2px;
}

.top-\[-2px\] {
  top: -2px;
}

.bottom-\[15px\] {
  bottom: 15px;
}

.left-\[-5px\] {
  left: -5px;
}

.bottom-\[-100\%\] {
  bottom: -100%;
}

.bottom-\[100\%\] {
  bottom: 100%;
}

.bottom-\[-\[\]\] {
  bottom: -[];
}

.bottom-\[-100px\] {
  bottom: -100px;
}

.bottom-\[-100\] {
  bottom: -100;
}

.bottom-\[-120px\] {
  bottom: -120px;
}

.bottom-\[-110px\] {
  bottom: -110px;
}

.bottom-\[-115px\] {
  bottom: -115px;
}

.bottom-\[-117px\] {
  bottom: -117px;
}

.bottom-\[-118px\] {
  bottom: -118px;
}

.top-\[-100\%\] {
  top: -100%;
}

.top-\[-400\] {
  top: -400;
}

.top-\[-400px\] {
  top: -400px;
}

.bottom-\[-400px\] {
  bottom: -400px;
}

.bottom-\[-40px\] {
  bottom: -40px;
}

.bottom-\[-4100px\] {
  bottom: -4100px;
}

.bottom-\[-410px\] {
  bottom: -410px;
}

.bottom-\[-420px\] {
  bottom: -420px;
}

.bottom-\[-415px\] {
  bottom: -415px;
}

.bottom-\[-418px\] {
  bottom: -418px;
}

.bottom-\[-468px\] {
  bottom: -468px;
}

.bottom-\[-488px\] {
  bottom: -488px;
}

.bottom-\[-48px\] {
  bottom: -48px;
}

.bottom-\[-483px\] {
  bottom: -483px;
}

.top-\[-10px\] {
  top: -10px;
}

.top-\[-15px\] {
  top: -15px;
}

.top-\[-5px\] {
  top: -5px;
}

.top-\[-px\] {
  top: -px;
}

.z-\[\] {
  z-index: ;
}

.z-\[10\] {
  z-index: 10;
}

.z-\[0\] {
  z-index: 0;
}

.z-\[20\] {
  z-index: 20;
}

.ml-\[100px\] {
  margin-left: 100px;
}

.ml-\[120px\] {
  margin-left: 120px;
}

.ml-\[10px\] {
  margin-left: 10px;
}

.ml-\[160px\] {
  margin-left: 160px;
}

.ml-\[200px\] {
  margin-left: 200px;
}

.ml-\[180px\] {
  margin-left: 180px;
}

.ml-\[190px\] {
  margin-left: 190px;
}

.flex {
  display: flex;
}

.hidden {
  display: none;
}

.h-\[200px\] {
  height: 200px;
}

.h-\[\] {
  height: ;
}

.h-\[77\.600px\] {
  height: 77.600px;
}

.h-\[47\.\] {
  height: 47.;
}

.h-\[47\.600px\] {
  height: 47.600px;
}

.h-\[57\] {
  height: 57;
}

.h-\[4\] {
  height: 4;
}

.h-full {
  height: 100%;
}

.h-\[full\] {
  height: full;
}

.h-\[1px\] {
  height: 1px;
}

.h-\[1\.5px\] {
  height: 1.5px;
}

.h-\[1\.2px\] {
  height: 1.2px;
}

.h-\[1\.1px\] {
  height: 1.1px;
}

.h-\[30px\] {
  height: 30px;
}

.h-\[110\%\] {
  height: 110%;
}

.h-\[150\%\] {
  height: 150%;
}

.h-\[100px\] {
  height: 100px;
}

.h-\[10px\] {
  height: 10px;
}

.h-\[140px\] {
  height: 140px;
}

.h-\[400px\] {
  height: 400px;
}

.h-\[450px\] {
  height: 450px;
}

.h-\[40px\] {
  height: 40px;
}

.h-\[470px\] {
  height: 470px;
}

.h-\[4px\] {
  height: 4px;
}

.h-\[465px\] {
  height: 465px;
}

.h-\[771\.350px\] {
  height: 771.350px;
}

.h-\[75\.350px\] {
  height: 75.350px;
}

.h-\[750\.350px\] {
  height: 750.350px;
}

.w-full {
  width: 100%;
}

.w-\[\] {
  width: ;
}

.w-\[211\] {
  width: 211;
}

.w-\[211px\] {
  width: 211px;
}

.w-\[20\] {
  width: 20;
}

.w-\[20\%\] {
  width: 20%;
}

.w-\[1\] {
  width: 1;
}

.w-\[1\%\] {
  width: 1%;
}

.w-auto {
  width: auto;
}

.w-\[2\] {
  width: 2;
}

.w-\[200p\] {
  width: 200p;
}

.w-\[200px\] {
  width: 200px;
}

.w-\[30px\] {
  width: 30px;
}

.w-\[110\%\] {
  width: 110%;
}

.w-\[150\%\] {
  width: 150%;
}

.w-\[150px\] {
  width: 150px;
}

.w-\[11\] {
  width: 11;
}

.w-\[100px\] {
  width: 100px;
}

.w-\[130px\] {
  width: 130px;
}

.w-\[0px\] {
  width: 0px;
}

.w-\[20px\] {
  width: 20px;
}

.w-\[180px\] {
  width: 180px;
}

.w-\[185px\] {
  width: 185px;
}

.w-\[188px\] {
  width: 188px;
}

.w-\[1px\] {
  width: 1px;
}

.w-\[210px\] {
  width: 210px;
}

.translate-y-\[\] {
  --tw-translate-y: ;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[50px\] {
  --tw-translate-y: 50px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-\[\] {
  --tw-rotate: ;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-\[45deg\] {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-x-\[\] {
  --tw-scale-x: ;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-x-\[1\.1\] {
  --tw-scale-x: 1.1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-x-\[1\.05\] {
  --tw-scale-x: 1.05;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-x-\[1\.06\] {
  --tw-scale-x: 1.06;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-x-\[1\.065\] {
  --tw-scale-x: 1.065;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-x-\[1\.067\] {
  --tw-scale-x: 1.067;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}

.animate-ping {
  animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
}

.cursor-pointer {
  cursor: pointer;
}

.cursor-default {
  cursor: default;
}

.flex-col {
  flex-direction: column;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.gap-x-\[\] {
  -moz-column-gap: ;
       column-gap: ;
}

.gap-x-\[30px\] {
  -moz-column-gap: 30px;
       column-gap: 30px;
}

.gap-x-\[10px\] {
  -moz-column-gap: 10px;
       column-gap: 10px;
}

.gap-x-\[40px\] {
  -moz-column-gap: 40px;
       column-gap: 40px;
}

.gap-x-\[45px\] {
  -moz-column-gap: 45px;
       column-gap: 45px;
}

.gap-x-\[42px\] {
  -moz-column-gap: 42px;
       column-gap: 42px;
}

.gap-x-\[20px\] {
  -moz-column-gap: 20px;
       column-gap: 20px;
}

.gap-y-\[20px\] {
  row-gap: 20px;
}

.gap-y-\[10px\] {
  row-gap: 10px;
}

.gap-y-\[12px\] {
  row-gap: 12px;
}

.overflow-hidden {
  overflow: hidden;
}

.text-nowrap {
  text-wrap: nowrap;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-md {
  border-radius: 0.375rem;
}

.bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity));
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-transparent {
  background-color: transparent;
}

.bg-orange-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(251 146 60 / var(--tw-bg-opacity));
}

.bg-blue-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(96 165 250 / var(--tw-bg-opacity));
}

.bg-orange-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(249 115 22 / var(--tw-bg-opacity));
}

.bg-orange-300 {
  --tw-bg-opacity: 1;
  background-color: rgb(253 186 116 / var(--tw-bg-opacity));
}

.bg-green-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(34 197 94 / var(--tw-bg-opacity));
}

.bg-gradient-to-br {
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
}

.bg-gradient-to-b {
  background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
}

.from-\[\] {
  --tw-gradient-from:  var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[\#\] {
  --tw-gradient-from: # var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[\#2c2c2c\] {
  --tw-gradient-from: #2c2c2c var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(44 44 44 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[4\] {
  --tw-gradient-from: 4 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[\#434548\] {
  --tw-gradient-from: #434548 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(67 69 72 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-black {
  --tw-gradient-from: #000 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[5\] {
  --tw-gradient-from: 5 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[\#c2c2c2\] {
  --tw-gradient-from: #c2c2c2 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(194 194 194 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[\#0000\] {
  --tw-gradient-from: #0000 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[\#00000\] {
  --tw-gradient-from: #00000 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[\#000000\] {
  --tw-gradient-from: #000000 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[\#c\] {
  --tw-gradient-from: #c var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[rgb\(194\2c 194\2c 194\)\] {
  --tw-gradient-from: rgb(194,194,194) var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(194 194 194 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[rgba\(194\2c 194\2c 194\2c 0\.93\)\] {
  --tw-gradient-from: rgba(194,194,194,0.93) var(--tw-gradient-from-position);
  --tw-gradient-to: rgba(194, 194, 194, 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[rgba\(0\2c 0\2c 0\2c 0\.93\)\] {
  --tw-gradient-from: rgba(0,0,0,0.93) var(--tw-gradient-from-position);
  --tw-gradient-to: rgba(0, 0, 0, 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[rgba\(0\2c 0\2c 0\2c 0\.21\)\] {
  --tw-gradient-from: rgba(0,0,0,0.21) var(--tw-gradient-from-position);
  --tw-gradient-to: rgba(0, 0, 0, 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[\#00000036\] {
  --tw-gradient-from: #00000036 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[\#00000040\] {
  --tw-gradient-from: #00000040 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[\#00000030\] {
  --tw-gradient-from: #00000030 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-\[4\%\] {
  --tw-gradient-from-position: 4%;
}

.from-\[79\%\] {
  --tw-gradient-from-position: 79%;
}

.from-\[5\%\] {
  --tw-gradient-from-position: 5%;
}

.to-\[\#\] {
  --tw-gradient-to: # var(--tw-gradient-to-position);
}

.to-\[\#434548\] {
  --tw-gradient-to: #434548 var(--tw-gradient-to-position);
}

.to-\[\] {
  --tw-gradient-to:  var(--tw-gradient-to-position);
}

.to-\[\#2c2c2c\] {
  --tw-gradient-to: #2c2c2c var(--tw-gradient-to-position);
}

.to-transparent {
  --tw-gradient-to: transparent var(--tw-gradient-to-position);
}

.to-\[79\%\] {
  --tw-gradient-to-position: 79%;
}

.to-\[95\%\] {
  --tw-gradient-to-position: 95%;
}

.p-1 {
  padding: 0.25rem;
}

.p-5 {
  padding: 1.25rem;
}

.p-\[5px\] {
  padding: 5px;
}

.p-\[1px\] {
  padding: 1px;
}

.px-\[\] {
  padding-left: ;
  padding-right: ;
}

.px-\[60px\] {
  padding-left: 60px;
  padding-right: 60px;
}

.px-\[1px\] {
  padding-left: 1px;
  padding-right: 1px;
}

.px-\[3px\] {
  padding-left: 3px;
  padding-right: 3px;
}

.pt-\[30px\] {
  padding-top: 30px;
}

.pb-\[10px\] {
  padding-bottom: 10px;
}

.pl-\[\] {
  padding-left: ;
}

.pl-\[100px\] {
  padding-left: 100px;
}

.pt-\[10px\] {
  padding-top: 10px;
}

.pl-\[5px\] {
  padding-left: 5px;
}

.pl-\[8px\] {
  padding-left: 8px;
}

.pt-\[\] {
  padding-top: ;
}

.pt-\[5px\] {
  padding-top: 5px;
}

.pt-\[20px\] {
  padding-top: 20px;
}

.pl-\[35px\] {
  padding-left: 35px;
}

.pb-\[\] {
  padding-bottom: ;
}

.pb-\[20\] {
  padding-bottom: 20;
}

.pb-\[2\] {
  padding-bottom: 2;
}

.pb-\[20px\] {
  padding-bottom: 20px;
}

.text-center {
  text-align: center;
}

.font-\[\] {
  font-family: ;
}

.text-\[14px\] {
  font-size: 14px;
}

.text-\[15px\] {
  font-size: 15px;
}

.text-\[150px\] {
  font-size: 150px;
}

.text-\[18px\] {
  font-size: 18px;
}

.text-\[25px\] {
  font-size: 25px;
}

.text-\[22px\] {
  font-size: 22px;
}

.text-\[12px\] {
  font-size: 12px;
}

.font-\[500\] {
  font-weight: 500;
}

.font-\[700\] {
  font-weight: 700;
}

.tracking-\[\] {
  letter-spacing: ;
}

.tracking-\[5px\] {
  letter-spacing: 5px;
}

.tracking-\[1px\] {
  letter-spacing: 1px;
}

.tracking-\[1\.5px\] {
  letter-spacing: 1.5px;
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-\[\] {
  color: ;
}

.text-orange-500 {
  --tw-text-opacity: 1;
  color: rgb(249 115 22 / var(--tw-text-opacity));
}

.text-\[1\] {
  color: 1;
}

.text-\[\#\] {
  color: #;
}

.text-\[\#434548\] {
  --tw-text-opacity: 1;
  color: rgb(67 69 72 / var(--tw-text-opacity));
}

.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.underline {
  text-decoration-line: underline;
}

.opacity-0 {
  opacity: 0;
}

.opacity-\[\] {
  opacity: ;
}

.opacity-\[0\.5\] {
  opacity: 0.5;
}

.opacity-\[0\.6\] {
  opacity: 0.6;
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-\[\] {
  transition-property: ;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-\[opacity\] {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-\[background\] {
  transition-property: background;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.duration-\[\] {
  transition-duration: ;
}

.duration-\[400ms\] {
  transition-duration: 400ms;
}

.duration-\[300\] {
  transition-duration: 300;
}

.duration-\[2000ms\] {
  transition-duration: 2000ms;
}

.duration-\[300ms\] {
  transition-duration: 300ms;
}

.duration-1000 {
  transition-duration: 1000ms;
}

.duration-\[500ms\] {
  transition-duration: 500ms;
}

.duration-\[1000ms\] {
  transition-duration: 1000ms;
}

.ease-in {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.hover\:bg-black:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

.hover\:text-transparent:hover {
  color: transparent;
}

.hover\:text-white:hover {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.hover\:text-orange-500:hover {
  --tw-text-opacity: 1;
  color: rgb(249 115 22 / var(--tw-text-opacity));
}

.hover\:opacity-\[0\.6\]:hover {
  opacity: 0.6;
}

.hover\:opacity-\[\]:hover {
  opacity: ;
}